import base64


def safe_base64_encode(byte_array):
    original_bytes = bytes(byte_array)
    encoded_bytes = base64.b64encode(original_bytes).decode("utf-8").replace('+', '-').replace('/', '_')
    return encoded_bytes


def safe_base64_decode(encoded_str):
    standard_base64 = encoded_str.replace('-', '+').replace('_', '/')
    padding_needed = len(standard_base64) % 4
    if padding_needed > 0:
        standard_base64 += '=' * (4 - padding_needed)
    decoded_bytes = base64.b64decode(standard_base64)
    return list(decoded_bytes)


if __name__ == '__main__':
    # 无符号转base64
    byte_array1 = [55, 65, 54, 68, 69, 55, 57, 56, 50, 57, 57, 66, 66, 52, 54, 55, 49, 68, 55, 55, 66, 48, 55, 65, 49, 68, 54, 52, 65, 49, 56, 66, 46, 99, 71, 70, 121, 89, 87, 48, 102, 89, 106, 70, 104, 89, 109, 74, 107, 78, 109, 73, 116, 77, 68, 82, 104, 89, 105, 48, 48, 78, 84, 90, 108, 76, 87, 73, 120, 89, 122, 103, 116, 89, 84, 81, 50, 79, 84, 89, 119, 90, 68, 77, 51, 77, 68, 86, 107, 72, 110, 90, 108, 99, 110, 78, 112, 98, 50, 52, 102, 77, 82, 53, 119, 98, 71, 70, 48, 90, 109, 57, 121, 98, 82, 57, 104, 98, 109, 82, 121, 98, 50, 108, 107, 72, 109, 86, 106, 72, 122, 69, 61, 46, 112, 235, 78, 34, 61, 67, 67, 18, 181, 34, 165, 60, 240, 63, 141, 248, 171, 48, 184, 99, 44, 82, 93, 213, 140, 31, 26, 94, 24, 254, 68, 157, 161, 219, 252, 154, 146, 45, 163, 168, 203, 176, 230, 205, 75, 25, 129, 196, 3, 159, 57, 88, 200, 196, 250, 228, 222, 123, 234, 89, 23, 49, 89, 113, 127, 113, 71, 235, 177, 135, 66, 39, 130, 238, 214, 252, 78, 123, 215, 24, 181, 149, 240, 133, 222, 233, 107, 239, 77, 30, 152, 1, 17, 211, 81, 132, 6, 213, 68, 120, 166, 40, 12, 36, 131, 221, 102, 120, 153, 255, 27, 222, 172, 36, 225, 95, 40, 56, 85, 118, 52, 126, 159, 221, 77, 94, 4, 211, 243, 51, 224, 183, 95, 228, 225, 160, 98, 29, 52, 58, 43, 235, 115, 12, 135, 207, 169, 172, 110, 230, 180, 235, 114, 134, 109, 234, 183, 182, 41, 12, 146, 70, 252, 15, 33, 136, 52, 30, 183, 63, 132, 117, 166, 36, 131, 210, 69, 77, 45, 126, 100, 70, 146, 113, 11, 52, 144, 159, 123, 31, 111, 65, 127, 225, 67, 228, 11, 145, 173, 95, 138, 134, 115, 224, 12, 56, 253, 240, 235, 56, 1, 47, 221, 238, 170, 107, 137, 175, 116, 38, 228, 132, 153, 96]
    res = safe_base64_encode(byte_array1)
    print(res)
    res1 = ""
    print(safe_base64_decode(res1))